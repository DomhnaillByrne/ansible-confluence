---
# tasks file for confluence
# vim: set ft=ansible ts=2 sw=2:

- name: Check for OS support
  fail: msg="OS is not supported"
  when: ansible_os_family != 'RedHat'

#- name: Ensure prerequisite packages are installed
#  yum: name={{ item }} state=present
#  with_items:
#    role_prerequisites

- name: Ensure group exists
  group: name={{ confluence_user }} state=present

- name: Ensure user exists
  user: name={{ confluence_user }} group={{ confluence_user }} state=present

- name: Fetch installer
  shell: curl -k -o {{ confluence_tmp }}/{{ confluence_installer }} {{ confluence_baseurl }}/{{ confluence_installer }}
  register: fetch
  tags: install

#- name: Fetch installer
#  get_url:
#    url={{ confluence_baseurl }}/{{ confluence_installer }}
#    dest={{ confluence_tmp }}/{{ confluence_installer }}
#  register: fetch
#  tags: install

- name: Extract installation
  shell: tar xvf {{ confluence_tmp }}/{{ confluence_installer }} -C {{ confluence_installto }} #--transform='s#\(atlassian\)-#\1/#'
  when: fetch.changed
  tags: install

- name: Update the symbolic link to the confluence install - /opt/confluence
  file: "path=/opt/confluence src={{confluence_installto}}/atlassian-confluence-{{ confluence_version }}-cluster state=link force=yes owner=confluence group=confluence"
  sudo: yes

- name: Ensure data dir exists
  file: path={{ item }} state=directory owner={{ confluence_user }} group={{ confluence_user }}
  with_items:
    - "{{confluence_shared_home}}"
    - "{{confluence_local_omega}}"
    - "{{confluence_local_alpha}}"
    - "{{confluence_datadir}}"

#- name: Ensure install exists
#  file: path={{ confluence_installto }} state=directory
#        owner={{ confluence_user }} group={{ confluence_user }}

- name: Set data dir in tomcat config
  lineinfile:
    dest={{ confluence_installto }}/atlassian-confluence-{{ confluence_version }}-cluster/confluence/WEB-INF/classes/confluence-init.properties
    regexp="^confluence.home={{ confluence_datadir }}"
    insertafter="^# confluence.home=/Confluence_Data"
    line="confluence.home={{ confluence_datadir }}"
    state=present
  tags: install

- name: Set java tunings
  template: >
    src=setenv.sh.j2
    dest={{ confluence_installto }}/atlassian-confluence-{{ confluence_version}}-cluster/bin/setenv.sh
    owner={{ confluence_user }} group={{ confluence_user }} mode=0755

- name: Ensure logs symlink exists
  file: src={{ confluence_installto }}/atlassian-confluence-{{ confluence_version }}-cluster/logs
        path=/var/log/confluence
        state=link
  tags: install

- name: Ensure service definition exists
  template: src=service.init.j2 dest=/etc/init.d/confluence
            owner=root group=root mode=0755
  tags: install

- name: add proxy config to Tomcat settings
  template: >
    src=server.xml.j2 dest=/opt/confluence/conf/server.xml
    owner={{ confluence_user }} group={{ confluence_user }} mode=0644
  tags: install
  #when: confluence_proxy

- name: Ensure consistent file ownership for install directory
  file: path={{ confluence_installto }}/atlassian-confluence-{{ confluence_version}}-cluster
        recurse=true
        state=directory
        owner={{ confluence_user }} group={{ confluence_user }}

# login_user not specified, uses the module default. RTFM.
- name: Ensure database user exists
  postgresql_user: name={{ confluence_dbuser }}
                   login_host={{ dbhost }}
                   login_password={{ dbpass }}
                   state=present
  when: dbhost is defined

# login_user not specified, uses the module default. RTFM.
- name: Ensure database exists
  postgresql_db: name={{ confluence_dbname }}
                 login_host={{ dbhost }}
                 login_password={{ dbpass }}
                 owner={{ confluence_dbuser }}
                 state=present
  when: dbhost is defined

- name: Ensure service is set to run
  service: name=confluence state=restarted enabled=yes
